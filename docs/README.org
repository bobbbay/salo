#+TITLE: Salo standard
#+STARTUP: inlineimages

Welcome to the Salo MVP document. The following documents outline the Salo standard, Salo's goals and aspirations, and what advantages Salo provides.

** Overview

   In short...

   * Salo is a static and dependently typed ML-inspired configuration language;
   * Salo provides a modular platform for creating and deploying OS-level configurations.

** Goals

Salo aims to:

 * Enable modular, OS-level configuration for multiple Linux distributions;
 * Use a static and dependent type system to check code at compile-time.

** Continue reading...

#+begin_quote
    Warning: there is no complete implementation of Salo as of yet, so all notes referencing a working compiler in the following notes are imaginary.
#+end_quote

 * [[./LANGUAGE.org]] for a description of the Salo standard and language
 * [[./TYPES.org]] for an in-depth description of (dependent) types in Salo
 * [[./DEPLOYMENT.org]] for an explanation of deployment in Salo

** TODOS

   These documents are very much works-in-progress! Here is a list of what's left to fill in:

   * The module system: Salo provides a modular system for enabling/disabling specific configurations
   * Type classes (traits): Grouping types by classes, enabling polymorphism
   * Type inference
   * Literate programming (org-mode): Salo enables programming side-by-side with org-mode content
   * Notation: stricter, macros alternative
